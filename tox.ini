[tox]
skipsdist = True
minversion = 3.10.0
envlist =
    py{39,310,311,312,313,314}
    flake8,
    ruff,
    mypy,

[testenv]
# you can run tox with the e2e pytest marker using tox factors:
#   tox -e py39,py310,py311,py312,py313,py314 -- e2e
# or single one with:
#   tox -e py310-e2e
# to use custom grpc endpoint and not capture print statements (-s arg in pytest):
#   DAPR_GRPC_ENDPOINT=localhost:12345 tox -e py310-e2e -- -s
setenv =
    PYTHONDONTWRITEBYTECODE=1
deps = -rdev-requirements.txt
commands =
    !e2e: pytest {posargs} -q -k "not e2e" --cov=durabletask --cov-branch --cov-report=term-missing --cov-report=xml
    e2e: pytest {posargs} -q -k e2e
commands_pre =
    pip3 install -e {toxinidir}/
allowlist_externals = pip3
pass_env = DAPR_GRPC_ENDPOINT,DAPR_HTTP_ENDPOINT,DAPR_RUNTIME_HOST,DAPR_GRPC_PORT,DAPR_HTTP_PORT

[testenv:flake8]
basepython = python3
usedevelop = False
deps = 
    flake8==7.3.0
    pip
commands =
    flake8 .

[testenv:ruff]
basepython = python3
usedevelop = False
deps = ruff
commands =
    ruff check --select I --fix
    ruff format

[testenv:examples]
passenv = HOME
basepython = python3
changedir = ./examples/
deps =
    mechanical-markdown
commands =
    ./validate.sh conversation
    ./validate.sh crypto
    ./validate.sh metadata
    ./validate.sh error_handling
    ./validate.sh pubsub-simple
    ./validate.sh pubsub-streaming
    ./validate.sh pubsub-streaming-async
    ./validate.sh state_store
    ./validate.sh state_store_query
    ./validate.sh secret_store
    ./validate.sh invoke-simple
    ./validate.sh invoke-custom-data
    ./validate.sh demo_actor
    ./validate.sh invoke-binding
    ./validate.sh grpc_proxying
    ./validate.sh w3c-tracing
    ./validate.sh distributed_lock
    ./validate.sh configuration
    ./validate.sh demo_workflow
    ./validate.sh workflow
    ./validate.sh jobs
    ./validate.sh ../
commands_pre =
    pip3 install -e {toxinidir}/
allowlist_externals=*

[testenv:example-component]
; This environment is used to validate a specific example component.
; Usage: tox -e example-component -- component_name
; Example: tox -e example-component -- conversation
passenv = HOME
basepython = python3
changedir = ./examples/
deps =
    mechanical-markdown
commands =
    ./validate.sh {posargs}

commands_pre =
    pip3 install -e {toxinidir}/
allowlist_externals=*

[testenv:type]
basepython = python3
usedevelop = False
deps = -rdev-requirements.txt
commands =
    mypy --config-file mypy.ini
commands_pre =
    pip3 install -e {toxinidir}/
allowlist_externals=*

